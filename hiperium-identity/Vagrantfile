# -*- mode: ruby -*-
# vi: set ft=ruby :

# # Vagrant 1.7+ automatically inserts a different
# # insecure keypair for each new VM created. The easiest way
# # to use the same keypair for all the machines is to disable
# # this feature and rely on the legacy insecure key.
# # config.ssh.insert_key = false
Vagrant.configure("2") do |config|

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    config.vm.box = "ubuntu/trusty64"

    # Synced folder configuration 
    if (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
        config.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=700,fmode=600"]
    else
        config.vm.synced_folder ".", "/vagrant"
    end

    # Common domain configuration
    config.vm.provider "virtualbox" do |domain|
	domain.customize ["modifyvm", :id, "--nic2", "hostonly"]
        domain.customize ["modifyvm", :id, "--hostonlyadapter2", "vboxnet5"]
    end

    # Machine-balancer specific definition
    config.vm.define "prod-identity-balancer" do |vmconfig|
        vmconfig.vm.hostname = "prod-identity-balancer"
        vmconfig.vm.network :private_network, ip: "172.16.76.130", netmask: "28" # The .129 IP address its often used by router
	vmconfig.vm.network :forwarded_port, host: 10522, guest: 22, id: "ssh"   # This avoid SSH overlaping port in the host
	vmconfig.vm.network :forwarded_port, host: 8580,  guest: 80 		 # This is the HTTPD load balancer VM for this domain
	vmconfig.vm.provider "virtualbox" do |vbox|
            vbox.customize ["modifyvm", :id, "--memory", "2048"]
  	    vbox.customize ["modifyvm", :id, "--name"  , "prod-identity-balancer"]
        end
        vmconfig.vm.provision :shell, path: "balancer-config/bootstrap.sh"	# Install HTTPD and Ansible via shell provisioning
    end

    # Machine-nodes specific definition
    (1..2).each do |i|
	config.vm.define "prod-identity-node#{i}" do |vmconfig|
            vmconfig.vm.hostname = "prod-identity-node#{i}"
            vmconfig.vm.network :private_network, ip: "172.16.76.#{130+i}", netmask: "28"
	    vmconfig.vm.network :forwarded_port, host: "1052#{2+i}", guest: 22, id: "ssh"  # This avoid SSH overlaping port in the host
            vmconfig.vm.network :forwarded_port, host: "858#{i}", guest: 8080  	   	   # Forward to Wildfly application port
 	    vmconfig.vm.network :forwarded_port, host: "959#{i}", guest: 9990              # Forward to Wildfly management port
            vmconfig.vm.provider "virtualbox" do |vbox|
            	vbox.customize ["modifyvm", :id, "--memory", "2048"]
            	vbox.customize ["modifyvm", :id, "--name"  , "prod-identity-node#{i}"]
            end
            vmconfig.vm.provision "shell", privileged: false, inline: <<-SHELL
		echo "Installing Open JDK 8 ..."
		sudo echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
		sudo add-apt-repository -y ppa:webupd8team/java
		sudo apt-get update
		sudo apt-get install -y oracle-java8-installer
		sudo rm -rf /var/cache/oracle-jdk8-installer
		export JAVA_HOME="/usr/lib/jvm/java-8-oracle"

		echo "Installing and configuring Wildfly App Server 10.0.0.Final ..."
		export WILDFLY_VERSION="10.0.0.Final"
		curl https://download.jboss.org/wildfly/$WILDFLY_VERSION/wildfly-$WILDFLY_VERSION.tar.gz | tar -xz
		export JBOSS_HOME="/opt/wildfly"
		sudo mv wildfly-$WILDFLY_VERSION $JBOSS_HOME
		sudo JBOSS_HOME/bin/add-user.sh admin Admin123 --silent
		sudo cp -f /vagrant/nodes-config/wildfly.conf /etc/default/wildfly
	        sudo cp -f /vagrant/nodes-config/wildfly-init-debian.sh /etc/init.d/wildfly
	        sudo cp -f /vagrant/nodes-config/wildfly-upstart.conf /etc/init/
		sudo cp -r /vagrant/nodes-config/postgresql $JBOSS_HOME/modules/system/layers/base/org/
		sudo cp -f /vagrant/nodes-config/standalone-ha.xml $JBOSS_HOME/standalone/configuration/
		export IP_ADDR=172.16.76.#{130+i}
		sudo sed -i "s|jboss.bind.address.management:127.0.0.1|jboss.bind.address.management:$IP_ADDR|g" $JBOSS_HOME/standalone/configuration/standalone-ha.xml
		sudo sed -i "s|jboss.bind.address:127.0.0.1|jboss.bind.address:$IP_ADDR|g" $JBOSS_HOME/standalone/configuration/standalone-ha.xml
		sudo sed -i "s|jboss.bind.address.private:127.0.0.1|jboss.bind.address.private:$IP_ADDR|g" $JBOSS_HOME/standalone/configuration/standalone-ha.xml
		sudo sed -i "s|-bmanagement=127.0.0.1|-bmanagement=$IP_ADDR|g" /etc/default/wildfly
		sudo sed -i "s|-Djboss.node.name=127.0.0.1|-Djboss.node.name=identity-node#{i}|g" /etc/default/wildfly
		sudo useradd -r -s /bin/false wildfly
	        sudo chown -R wildfly:wildfly $JBOSS_HOME

		echo "Deploying Hiperium Identity Service ..."
		sudo -u wildfly bash -c 'curl -u admin:admin123 -L "http://repository-hiperium.rhcloud.com/service/local/artifact/maven/content?g=com.hiperium&a=hiperium-identity&v=LATEST&p=war&r=snapshots" -o /opt/wildfly/standalone/deployments/hiperium-identity.war'
		sudo service wildfly start
            SHELL
        end
    end

    # Put the VM in Vagrant Cache
    if Vagrant.has_plugin?("vagrant-cachier")
    	config.cache.scope = :box
    end
end
